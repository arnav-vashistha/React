{"version":3,"sources":["components/HeaderComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/FooterComponent.js","components/MenuComponent.js","components/DishDetailComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","redux/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","toggleModal","setState","isModalOpen","state","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","toggleNav","bind","isNavOpen","this","dark","expand","className","onClick","href","src","height","width","alt","isOpen","navbar","to","outline","toggle","onSubmit","htmlFor","type","id","name","innerRef","input","check","color","Component","Loading","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","image","designation","description","Home","console","log","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","Footer","Menu","dishes","active","map","key","required","val","length","maxLength","len","CommentForm","isModelOpen","values","JSON","stringify","postComment","dishId","rating","author","comment","handleSubmit","md","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","top","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","role","size","offset","checkbox","RenderLeader","tag","left","middle","object","body","heading","About","leaders","leadersLoading","leadersErrMess","title","list","addComment","payload","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","location","filter","classNames","timeout","path","component","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","resetFeedbackForm","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","message","firstname","lastname","telnum","email","agree","contactType","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","ConfigureStore","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","store","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec7c95bd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin = (event) => {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    console.log(props)\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                    <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nclass Menu extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        if (this.props.dishes.isLoading) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.props.dishes.errMess) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h4>{this.props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {\r\n\r\n                            this.props.dishes.dishes.map((dish) => {\r\n                                return (\r\n                                    <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n                                        <Card key={dish.id}>\r\n                                            <Link to={`/menu/${dish.id}`}>\r\n                                                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                                                <CardImgOverlay>\r\n                                                    <CardTitle>{dish.name}</CardTitle>\r\n                                                </CardImgOverlay>\r\n                                            </Link>\r\n                                        </Card>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n    }\r\n}\r\nexport default Menu","import React, { Component, Fragment } from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Row, Col, Label\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    state = {\r\n        isModelOpen: false\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        this.toggleModal();\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                <Button outline color=\"secondary\" onClick={this.toggleModal}><span className=\"fa fa-pencil\">{' '}Submit Comment</span></Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" name=\"author\"\r\n                                        className=\"form-control\" placeholder=\"Enter Your Name\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".comment\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nfunction RenderComments({ comments, dishId, postComment }) {\r\n    return (\r\n        <Fragment>\r\n            <Stagger in>\r\n                {comments.map(comment => {\r\n                    return (\r\n                        <Fade in>\r\n                            <li key={comment.id}>\r\n                                {comment.comment}\r\n                                <br />\r\n                                --{comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}\r\n                            </li>\r\n                        </Fade>\r\n                    )\r\n                })}\r\n            </Stagger>\r\n            <br />\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nclass DishDetail extends Component {\r\n\r\n    render() {\r\n\r\n        if (this.props.isLoading) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if (this.props.errMess) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{this.props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        else if (this.props.dish != null) {\r\n            let { image, name, description } = this.props.dish;\r\n            let { comments } = this.props;\r\n            console.log(comments);\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n\r\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{this.props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{this.props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <FadeTransform\r\n                                in\r\n                                transformProps={{\r\n                                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                                }}>\r\n                                <Card>\r\n                                    <CardImg top src={baseUrl + image} alt={name} />\r\n                                    <CardBody>\r\n                                        <CardTitle>{name}</CardTitle>\r\n                                        <CardText>{description}</CardText>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </FadeTransform>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <h3> Comments</h3>\r\n                            <RenderComments comments={comments}\r\n                                postComment={this.props.postComment}\r\n                                dishId={this.props.dish.id} />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default DishDetail","import React, { Component } from 'react';\r\nimport {\r\n    Breadcrumb, BreadcrumbItem,\r\n    Button, Label, Row, Col\r\n} from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n\r\n    //     };\r\n    //     this.handleChange = this.handleChange.bind(this);\r\n    //     this.handleSubmit = this.handleSubmit.bind(this);\r\n    // }\r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.postFeedback(values);\r\n        // this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, isNumber, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            isNumber: 'Only Numbers',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({ leader }) {\r\n    return (\r\n        <Media tag=\"li\">\r\n            <Media left middle>\r\n                <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n            </Media>\r\n            <Media body className=\"ml-5\">\r\n                <Media heading>{leader.name}</Media>\r\n                <h5 >{leader.designation}</h5>\r\n                <p>{leader.description}</p>\r\n            </Media>\r\n        </Media>\r\n    )\r\n}\r\n\r\nfunction About(props) {\r\n    const { leaders, leadersLoading, leadersErrMess } = props;\r\n    if (leadersLoading) {\r\n        console.log(\"leader load ho rahe hain\");\r\n        return (\r\n\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (leadersErrMess) {\r\n        return (\r\n            <h4>{leadersErrMess}</h4>\r\n        );\r\n    } else {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>About Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Our History</h2>\r\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <Card>\r\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                            <CardBody>\r\n                                <dl className=\"row p-1\">\r\n                                    <dt className=\"col-6\">Started</dt>\r\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                    <dd className=\"col-6\">$1,250,375</dd>\r\n                                    <dt className=\"col-6\">Employees</dt>\r\n                                    <dd className=\"col-6\">40</dd>\r\n                                </dl>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Card>\r\n                            <CardBody className=\"bg-faded\">\r\n                                <blockquote className=\"blockquote\">\r\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                        I'm not hungry enough to eat six.</p>\r\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                        P. Pepe, Diversion Books, 2014</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Media list>\r\n                            <Stagger in>\r\n                                {leaders.map((leader) => {\r\n                                    return (\r\n                                        <Fade in>\r\n                                            <div key={leader.id} className=\"col-12 mt-5\">\r\n                                                <RenderLeader leader={leader} />\r\n                                            </div>\r\n                                        </Fade>\r\n                                    );\r\n                                })}\r\n                            </Stagger>\r\n                        </Media>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default About;    ","import { baseUrl } from '../shared/baseUrl';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        }, error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading(true));\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        }, error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message); });\r\n};","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport Header from './HeaderComponent';\r\nimport Home from './HomeComponent';\r\nimport Footer from './FooterComponent'; import Menu from './MenuComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n    fetchDishes: () => { dispatch(fetchDishes()) },\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    fetchComments: () => { dispatch(fetchComments()) },\r\n    fetchPromos: () => { dispatch(fetchPromos()) },\r\n    fetchLeaders: () => { dispatch(fetchLeaders()) }\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    onDishSelect(dishId) {\r\n        console.log(dishId);\r\n        this.setState({ selectedDish: dishId });\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment} />\r\n            );\r\n        };\r\n\r\n        console.log(this.props.location);\r\n        console.log(this.props.leaders);\r\n        return (\r\n            <div>\r\n                <Header />\r\n                {/* <Menu dishes={this.props.dishes} onClick={(dishId) => this.onDishSelect(dishId)} /> */}\r\n                {\r\n                    this.props.selectedDish != null ? <DishDetail dish={this.props.dishes.filter((dish) => dish.id === this.props.selectedDish)[0]} /> : \"\"\r\n                }\r\n\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch>\r\n                            <Route path='/home' component={() => <Home\r\n                                dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                                dishesLoading={this.props.dishes.isLoading}\r\n                                dishesErrMess={this.props.dishes.errMess}\r\n                                promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                                promoLoading={this.props.promotions.isLoading}\r\n                                promoErrMess={this.props.promotions.errMess}\r\n                                leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                                leaderLoading={this.props.leaders.isLoading}\r\n                                leaderErrMess={this.props.leaders.errMess}\r\n                            />}\r\n                            />\r\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path='/menu/:dishId' component={DishWithId} />\r\n                            <Route exact path='/contactus' component={\r\n                                () => <Contact resetFeedbackForm={this.props.resetFeedbackForm}\r\n                                    postFeedback={this.props.postFeedback} />}\r\n                            />\r\n                            <Route path='/aboutus' component={\r\n                                () => <About leaders={this.props.leaders.leaders}\r\n                                    leadersLoading={this.props.leaders.isLoading}\r\n                                    leadersErrMess={this.props.leaders.errMess} />} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments: [] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, errMess: null, comments: action.payload };\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, errMess: action.payload };\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return { ...state, comments: state.comments.concat(comment) };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload };\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, promotions: [] }\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { isLoading: true,\r\n    errMess: null,\r\n    leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }), applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nclass App extends Component {\n\n  render() {\n    const store = ConfigureStore();\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}